{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","this","htmlFor","type","pattern","title","required","onChange","id","React","Component","ContactItem","contacts","deleteContact","map","onClick","ContactList","Filter","App","filter","onFormSubmit","contact","onDeleteContact","prevState","changeFilter","getVisibleContacts","normalzedFilter","toLowerCase","includes","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc47c4dc.chunk.js","sourcesContent":["import React from \"react\";\nimport shortid from \"shortid\";\n\nclass ContactForm extends React.Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor={this.nameInputId}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n            id={this.nameInputId}\n          />\n        </label>\n        <br />\n        <label htmlFor={this.numberInputId}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n            id={this.numberInputId}\n          />\n        </label>\n        <br />\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from \"react\";\n\nconst ContactItem = ({ contacts, deleteContact }) =>\n  contacts.map(({ id, name, number }) => {\n    return (\n      <li key={id}>\n        {name}: {number}\n        <button type=\"button\" onClick={() => deleteContact(id)}>\n          Delete\n        </button>\n      </li>\n    );\n  });\n\nexport default ContactItem;\n","import React from \"react\";\nimport ContactItem from \"./ContactItem/ContactItem\";\n\nconst ContactList = ({ contacts, deleteContact }) => (\n  <ul>\n    <ContactItem contacts={contacts} deleteContact={deleteContact} />\n  </ul>\n);\n\nexport default ContactList;\n\n// const ContactList = ({ contacts }) => (\n//   <ul>\n//     {/* <ContactItem contacts={contacts} /> */}\n//     {contacts.map(({ id, name, number }) => (\n//       <li key={id}>\n//         {name}: {number}\n//       </li>\n//     ))}\n//   </ul>\n// );\n","import React from \"react\";\n\nconst Filter = ({ value, onChange }) => (\n  <label>\n    Find contacts by name\n    <input type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nexport default Filter;\n","import React from \"react\";\nimport shortid from \"shortid\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nclass App extends React.Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  onFormSubmit = ({ name, number }) => {\n    const contact = { id: shortid.generate(), name, number };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  onDeleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalzedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalzedFilter)\n    );\n  };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.onFormSubmit} />\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <h2>Contacts</h2>\n        <ContactList\n          contacts={visibleContacts}\n          deleteContact={this.onDeleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}